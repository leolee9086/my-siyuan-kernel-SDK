export const assetApiDefs = [
  {
    method: "POST",
    endpoint: "/api/asset/fullReindexAssetContent",
    en: "fullReindexAssetContent",
    zh_cn: "重建资源文件内容索引",
    description: "完全重新索引工作空间中所有资源文件的内容，用于搜索。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => ({}),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.any().nullable() })
  },
  {
    method: "POST",
    endpoint: "/api/asset/getDocAssets",
    en: "getDocAssets",
    zh_cn: "获取文档资源列表",
    description: "获取指定文档块所引用的所有资源文件列表。",
    needAuth: true,
    needAdminRole: false,
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => ({ id: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.any() })
  },
  {
    method: "POST",
    endpoint: "/api/asset/getDocImageAssets",
    en: "getDocImageAssets",
    zh_cn: "获取文档图片资源列表",
    description: "获取指定文档块所引用的所有图片类型资源文件列表。",
    needAuth: true,
    needAdminRole: false,
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => ({ id: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.any() })
  },
  {
    method: "POST",
    endpoint: "/api/asset/getFileAnnotation",
    en: "getFileAnnotation",
    zh_cn: "获取文件标注",
    description: "获取指定资源文件的标注信息（通常是 XFDF 格式的 PDF 标注）。",
    needAuth: true,
    needAdminRole: false,
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => ({ path: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ path: z.string(), data: z.string() }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/getImageOCRText",
    en: "getImageOCRText",
    zh_cn: "获取图片 OCR 文本",
    description: "获取指定图片资源文件后台 OCR 识别的文本内容。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => ({ path: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ text: z.string() }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/getMissingAssets",
    en: "getMissingAssets",
    zh_cn: "获取丢失的资源列表",
    description: "获取所有在文档中被引用但实际资源文件已不存在的资源路径列表。",
    needAuth: true,
    needAdminRole: false,
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => ({}),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ missingAssets: z.array(z.any()) }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/getUnusedAssets",
    en: "getUnusedAssets",
    zh_cn: "获取未使用资源列表",
    description: "获取工作空间中存在但未被任何文档引用的资源文件列表（最多返回512条）。",
    needAuth: true,
    needAdminRole: false,
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => ({}),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ unusedAssets: z.array(z.any()) }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/insertLocalAssets",
    en: "insertLocalAssets",
    zh_cn: "插入本地资源文件",
    description: "将指定的本地文件复制到当前笔记本的 assets 文件夹中，并在指定文档中插入对这些资源的引用。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => ({ assetPaths: z.array(z.string()), id: z.string(), isUpload: z.boolean().optional() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ succMap: z.record(z.string()) }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/ocr",
    en: "ocr",
    zh_cn: "对图片进行 OCR",
    description: "对指定的图片资源文件执行光学字符识别，并返回识别出的文本及原始 OCR 结果。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => ({ path: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ text: z.string(), ocrJSON: z.any() }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/removeUnusedAsset",
    en: "removeUnusedAsset",
    zh_cn: "移除单个未使用资源",
    description: "删除工作空间中指定的单个未使用（未被任何文档引用）的资源文件。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => ({ path: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ path: z.string() }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/removeUnusedAssets",
    en: "removeUnusedAssets",
    zh_cn: "移除所有未使用资源",
    description: "删除工作空间中所有未被任何文档引用的资源文件。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => ({}),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ paths: z.array(z.string()) }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/renameAsset",
    en: "renameAsset",
    zh_cn: "重命名资源文件",
    description: "重命名指定的资源文件，并自动更新所有文档中对该资源的引用。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => ({ oldPath: z.string(), newName: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ newPath: z.string() }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/resolveAssetPath",
    en: "resolveAssetPath",
    zh_cn: "解析资源绝对路径",
    description: "将资源文件在思源笔记中的相对路径（如 'assets/image.png'）转换为其在文件系统中的绝对路径。",
    needAuth: true,
    needAdminRole: false,
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => ({ path: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.string() })
  },
  {
    method: "POST",
    endpoint: "/api/asset/setFileAnnotation",
    en: "setFileAnnotation",
    zh_cn: "设置文件标注",
    description: "为指定的资源文件（通常是 PDF）保存或更新其标注信息（通常是 XFDF 格式）。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => ({ path: z.string(), data: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.any().nullable() })
  },
  {
    method: "POST",
    endpoint: "/api/asset/setImageOCRText",
    en: "setImageOCRText",
    zh_cn: "设置图片 OCR 文本",
    description: "手动为指定的图片资源文件设置或更新其 OCR 文本内容，并刷新到数据库。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => ({ path: z.string(), text: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.any().nullable() })
  },
  {
    method: "POST",
    endpoint: "/api/asset/statAsset",
    en: "statAsset",
    zh_cn: "获取文件元信息",
    description: "获取指定资源文件（assets/ 路径）或本地文件（file:/// 路径）的大小、创建及修改时间等元信息。",
    needAuth: true,
    needAdminRole: true, // Reading arbitrary file path stats might need admin
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => ({ path: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ size: z.number(), hSize: z.string(), created: z.number(), hCreated: z.string(), updated: z.number(), hUpdated: z.string() }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/upload",
    en: "Upload", // Capitalized in rawApiList
    zh_cn: "上传文件",
    description: "处理文件上传。通常用于将文件上传到服务器的临时目录或直接作为资源插入。参数通过 FormData 传递，如 assetPath (可选，指定保存路径) 和 id (可选，关联的文档ID)。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => z.object({ assetPath: z.string().optional(), id: z.string().optional(), files: z.any() }).describe("Parameters are typically sent via FormData, not JSON body."),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.object({ errFiles: z.array(z.string()), succMap: z.record(z.string()) }) })
  },
  {
    method: "POST",
    endpoint: "/api/asset/uploadCloud",
    en: "uploadCloud",
    zh_cn: "上传资源到云端",
    description: "将指定文档（及其子文档中）引用的所有本地资源文件上传到用户配置的云存储服务。",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => ({ id: z.string() }),
    zodResponseSchema: (z) => ({ Code: z.number(), Msg: z.string(), Data: z.any().nullable() })
  }
];
