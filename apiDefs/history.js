export const historyApiDefs = [
  {
    method: "POST",
    endpoint: "/api/history/clearWorkspaceHistory",
    description: "清空当前工作空间下的所有历史记录。这是一个耗时操作，执行前会有提示。",
    en: "clearWorkspaceHistory",
    zh_cn: "清空工作区历史记录",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => z.object({}).strict().describe("无请求参数"),
    zodResponseSchema: (z) => ({
      Code: z.number().describe("响应状态码，0 表示成功"),
      Msg: z.string().describe("响应消息"),
      Data: z.null().describe("成功时固定为 null"),
    })
  },
  {
    method: "POST",
    endpoint: "/api/history/getDocHistoryContent",
    description: "获取指定文档历史版本的内容和相关信息。",
    en: "getDocHistoryContent",
    zh_cn: "获取文档历史版本内容",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => z.object({
      historyPath: z.string().describe("文档历史版本的路径，通常从其他历史记录接口获取"),
      k: z.string().optional().describe("搜索关键词，用于在历史内容中高亮显示"),
      highlight: z.boolean().optional().default(true).describe("是否对关键词进行高亮显示，默认为 true"),
    }),
    zodResponseSchema: (z) => ({
      Code: z.number().describe("响应状态码，0 表示成功"),
      Msg: z.string().describe("响应消息"),
      Data: z.object({
        id: z.string().describe("文档的 ID"),
        rootID: z.string().describe("文档的根块 ID"),
        content: z.string().describe("文档历史版本的内容 (HTML 格式)"),
        isLargeDoc: z.boolean().describe("是否为大文档"),
      }).nullable().describe("成功时返回文档历史内容，失败时为 null"),
    })
  },
  {
    method: "POST",
    endpoint: "/api/history/getHistoryItems",
    description: "根据创建日期、关键词等条件获取历史记录中的具体条目列表。",
    en: "getHistoryItems",
    zh_cn: "获取历史条目列表",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => z.object({
      created: z.string().describe("创建日期，格式如 'YYYYMMDD'"),
      notebook: z.string().optional().describe("笔记本 ID，如果提供，则限定在该笔记本内搜索"),
      type: z.number().int().optional().default(0).describe("历史记录类型：0 表示文档，1 表示资源文件，2 表示笔记本。默认为 0 (文档)。"),
      query: z.string().describe("搜索关键词"),
      op: z.string().optional().default("all").describe("搜索操作类型，具体含义需参考 model.FullTextSearchHistoryItems 实现，默认为 'all'"),
    }),
    zodResponseSchema: (z) => ({
      Code: z.number().describe("响应状态码，0 表示成功"),
      Msg: z.string().describe("响应消息"),
      Data: z.object({
        items: z.array(z.object({
          id: z.string().describe("历史记录条目的唯一ID (通常为历史文件名或路径相关ID)"),
          title: z.string().describe("历史记录条目的标题或名称"),
          content: z.string().describe("历史记录条目的简要内容或描述"),
          notebookID: z.string().describe("所属笔记本ID"),
          notebookName: z.string().describe("所属笔记本名称"),
          path: z.string().describe("相关文档或资源的路径"),
          type: z.number().int().describe("历史记录类型"),
          created: z.string().describe("创建时间 (Unix时间戳字符串或特定格式日期)"),
          updated: z.string().describe("更新时间 (Unix时间戳字符串或特定格式日期)"),
          size: z.number().int().describe("大小 (字节)"),
          hSize: z.string().describe("人类可读的大小"),
          count: z.number().int().describe("相关计数 (例如，如果是笔记本历史，可能表示包含的文档数)"),
          repoID: z.string().optional().describe("版本库ID (如果适用)"),
          historyName: z.string().optional().describe("历史文件名"),
          historyPath: z.string().optional().describe("历史文件完整路径"),
          docID: z.string().optional().describe("相关文档ID (如果适用)"),
        })).describe("符合条件的历史条目数组"),
      }).nullable().describe("成功时返回历史条目列表，失败时为 null"),
    })
  },
  {
    method: "POST",
    endpoint: "/api/history/getNotebookHistory",
    description: "获取所有笔记本的历史记录信息。",
    en: "getNotebookHistory",
    zh_cn: "获取笔记本历史记录",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => z.object({}).strict().describe("无请求参数"),
    zodResponseSchema: (z) => ({
      Code: z.number().describe("响应状态码，0 表示成功"),
      Msg: z.string().describe("响应消息"),
      Data: z.object({
        histories: z.array(z.object({
          id: z.string().describe("历史记录的唯一ID (通常为历史文件名或路径相关ID)"),
          title: z.string().describe("历史记录的标题 (通常是笔记本名称)"),
          type: z.number().int().describe("历史类型 (应为2，代表笔记本历史)"),
          created: z.string().describe("历史创建的时间戳 (格式：YYYYMMDDHHmmss)"),
          updated: z.string().describe("历史更新的时间戳 (格式：YYYYMMDDHHmmss)"),
          count: z.number().int().describe("该历史版本包含的文档数量"),
          size: z.number().int().describe("历史版本占用的磁盘空间大小 (字节)"),
          hSize: z.string().describe("人类可读的磁盘空间大小"),
          repoID: z.string().describe("所属版本库ID (通常是笔记本ID)"),
          historyName: z.string().describe("历史文件名 (例如 '20230315103000.json')"),
          historyPath: z.string().describe("历史文件的完整存储路径"),
        })).describe("笔记本历史记录数组"),
      }).nullable().describe("成功时返回笔记本历史列表，失败时为 null"),
    })
  },
  {
    method: "POST",
    endpoint: "/api/history/reindexHistory",
    description: "重建整个工作空间的历史记录索引。这是一个后台异步操作。",
    en: "reindexHistory",
    zh_cn: "重建历史记录索引",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => z.object({}).strict().describe("无请求参数"),
    zodResponseSchema: (z) => ({
      Code: z.number().describe("响应状态码，0 表示成功"),
      Msg: z.string().describe("响应消息"),
      Data: z.null().describe("成功时固定为 null"),
    })
  },
  {
    method: "POST",
    endpoint: "/api/history/rollbackAssetsHistory",
    description: "将资源文件回滚到指定的历史版本。",
    en: "rollbackAssetsHistory",
    zh_cn: "回滚资源文件历史",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => z.object({
      historyPath: z.string().describe("资源文件历史版本的路径，通常从其他历史记录接口获取"),
    }),
    zodResponseSchema: (z) => ({
      Code: z.number().describe("响应状态码，0 表示成功"),
      Msg: z.string().describe("响应消息"),
      Data: z.null().describe("成功时固定为 null"),
    })
  },
  {
    method: "POST",
    endpoint: "/api/history/rollbackDocHistory",
    description: "将单个文档回滚到指定的历史版本。",
    en: "rollbackDocHistory",
    zh_cn: "回滚文档历史版本",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => z.object({
      notebook: z.string().describe("文档所属的笔记本 ID"),
      historyPath: z.string().describe("文档历史版本的路径，通常从其他历史记录接口获取"),
    }),
    zodResponseSchema: (z) => ({
      Code: z.number().describe("响应状态码，0 表示成功"),
      Msg: z.string().describe("响应消息"),
      Data: z.object({
        box: z.string().describe("文档所属的笔记本 ID"),
      }).nullable().describe("成功时返回包含笔记本ID的对象，失败时为 null"),
    })
  },
  {
    method: "POST",
    endpoint: "/api/history/rollbackNotebookHistory",
    description: "将整个笔记本回滚到指定的历史版本。",
    en: "rollbackNotebookHistory",
    zh_cn: "回滚笔记本历史版本",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: true,
    zodRequestSchema: (z) => z.object({
      historyPath: z.string().describe("笔记本历史版本的路径，通常从 getNotebookHistory 接口获取"),
    }),
    zodResponseSchema: (z) => ({
      Code: z.number().describe("响应状态码，0 表示成功"),
      Msg: z.string().describe("响应消息"),
      Data: z.null().describe("成功时固定为 null"),
    })
  },
  {
    method: "POST",
    endpoint: "/api/history/searchHistory",
    description: "根据关键词、笔记本、类型等分页搜索历史记录。",
    en: "searchHistory",
    zh_cn: "搜索历史记录",
    needAuth: true,
    needAdminRole: true,
    unavailableIfReadonly: false,
    zodRequestSchema: (z) => z.object({
      notebook: z.string().optional().describe("笔记本 ID，如果提供，则限定在该笔记本内搜索"),
      type: z.number().int().optional().default(0).describe("历史记录类型：0 表示文档，1 表示资源文件，2 表示笔记本。默认为 0 (文档)。"),
      query: z.string().describe("搜索关键词"),
      page: z.number().int().optional().default(1).describe("页码，从 1 开始，默认为 1"),
      op: z.string().optional().default("all").describe("搜索操作类型，具体含义需参考 model.FullTextSearchHistory 实现，默认为 'all'"),
    }),
    zodResponseSchema: (z) => ({
      Code: z.number().describe("响应状态码，0 表示成功"),
      Msg: z.string().describe("响应消息"),
      Data: z.object({
        histories: z.array(z.object({
          created: z.string().describe("历史记录分组的创建日期 (格式：YYYYMMDD)"),
          count: z.number().int().describe("该日期分组下的历史条目数量"),
          items: z.array(z.object({
            id: z.string().describe("历史记录条目的唯一ID"),
            title: z.string().describe("历史记录条目的标题或名称"),
            content: z.string().describe("历史记录条目的简要内容或描述"),
            notebookID: z.string().describe("所属笔记本ID"),
            notebookName: z.string().describe("所属笔记本名称"),
            path: z.string().describe("相关文档或资源的路径"),
            type: z.number().int().describe("历史记录类型"),
            created: z.string().describe("创建时间 (Unix时间戳字符串或特定格式日期)"),
            updated: z.string().describe("更新时间 (Unix时间戳字符串或特定格式日期)"),
            size: z.number().int().describe("大小 (字节)"),
            hSize: z.string().describe("人类可读的大小"),
            count: z.number().int().describe("相关计数"),
            repoID: z.string().optional().describe("版本库ID"),
            historyName: z.string().optional().describe("历史文件名"),
            historyPath: z.string().optional().describe("历史文件完整路径"),
            docID: z.string().optional().describe("相关文档ID"),
          })).optional().describe("该日期分组下的具体历史条目列表 (仅在某些情况下展开，例如首次加载或点击展开时)"),
        })).describe("按日期分组的历史记录数组"),
        pageCount: z.number().int().describe("总页数"),
        totalCount: z.number().int().describe("符合条件的总历史记录条目数 (注意，这里可能指分组数量，不是单个item数量)"),
      }).nullable().describe("成功时返回搜索结果，失败时为 null"),
    })
  }
];
