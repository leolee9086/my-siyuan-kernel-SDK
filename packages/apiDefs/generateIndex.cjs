const fs = require('fs');
const path = require('path');

const currentDir = __dirname;
const outputFile = path.join(currentDir, 'index.js');
const scriptName = path.basename(__filename);

let exportStatements = [];

const header = `// This file is auto-generated by ${scriptName}, do not edit manually.
// It re-exports all API definitions from individual .js files in this directory.
// It's intended to be used as the main entry point for the @leolee9086/siyuan-kernel-api-schemas package.
`;

console.log(`Generating ${outputFile}...`);

fs.readdir(currentDir, (err, files) => {
  if (err) {
    console.error('Failed to list files in directory:', err);
    process.exit(1);
  }

  files.forEach(file => {
    if (file.endsWith('.js') && file !== 'index.js' && file !== scriptName && file !== 'AInote.js' /* Just in case an AInote.js exists */) {
      exportStatements.push(`export * from './${file}';`);
    }
  });

  // Sort for consistent order, though import order for * re-exports doesn't strictly matter
  exportStatements.sort(); 

  const content = header + '\n' + exportStatements.join('\n') + '\n';

  fs.writeFile(outputFile, content, (err) => {
    if (err) {
      console.error(`Failed to write ${outputFile}:`, err);
      process.exit(1);
    }
    console.log(`${outputFile} generated successfully with ${exportStatements.length} export statements.`);
  });
}); 