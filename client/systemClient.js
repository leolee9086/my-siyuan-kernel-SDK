// Generated client for API group system\n// TODO: Implement or import a common HTTP request wrapper function (e.g., fetchWrapper)\n/*\nasync function fetchWrapper(method, endpoint, params, needAuth) {\n  const SiyuanKernelPrefix = typeof window === 'object' ? '' : 'http://127.0.0.1:6806';\n  const url = SiyuanKernelPrefix + endpoint;\n  const options = { method, headers: {} };\n  if (method === 'POST' && params && Object.keys(params).length > 0) { // Only add body if params exist and are not empty\n    options.headers['Content-Type'] = 'application/json';\n    options.body = JSON.stringify(params);\n  }\n  if (needAuth) {\n    // Example: Retrieve and add auth token\n    // const token = localStorage.getItem('siyuan-auth-token'); \n    // if (token) options.headers['Authorization'] = `Token ${token}`;\n    options.headers['Authorization'] = 'Bearer YOUR_TOKEN_HERE'; // Placeholder\n  }\n  const response = await fetch(url, options);\n  if (!response.ok) {\n    let errorData = 'Failed to parse error response';\n    try { errorData = await response.json(); } catch (e) { try {errorData = await response.text(); } catch (e2) { /* ignore secondary error */ }}\n    console.error('API Error:', response.status, errorData); \n    throw new Error(`API Error ${response.status}: ${JSON.stringify(errorData)}`);\n  }\n  const contentType = response.headers.get('content-type');\n  if (contentType && contentType.includes('application/json')) {\n    return response.json();\n  } \n  return response.text(); // Or handle other content types\n}\n*/\n\n/**\n * 将思源笔记相关目录添加到 Microsoft Defender 的排除项中，以避免潜在的性能问题或冲突。此操作仅在 Windows 系统上有效。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def addMicrosoftDefenderExclusion Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def addMicrosoftDefenderExclusion Response returns z.object() directly.\n */\nexport async function addMicrosoftDefenderExclusion(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/addMicrosoftDefenderExclusion', payload, true);\n  console.log('Mock call to addMicrosoftDefenderExclusion with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取思源笔记内核的启动进度。此接口也接受 POST 请求。\n * @param {any} payload - ERROR: API def bootProgress Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def bootProgress Response returns z.object() directly.\n */\nexport async function bootProgress(payload) {\n  // Example: return fetchWrapper('GET', '/api/system/bootProgress', payload, false);\n  console.log('Mock call to bootProgress with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取思源笔记内核的启动进度。此接口也接受 GET 请求。\n * @param {any} payload - ERROR: API def bootProgress Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def bootProgress Response returns z.object() directly.\n */\nexport async function bootProgress(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/bootProgress', payload, false);\n  console.log('Mock call to bootProgress with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 检查思源笔记是否有新版本。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def checkUpdate Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def checkUpdate Response returns z.object() directly.\n */\nexport async function checkUpdate(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/checkUpdate', payload, true);\n  console.log('Mock call to checkUpdate with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 检查指定路径是否可以作为思源笔记的工作空间目录。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def checkWorkspaceDir Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def checkWorkspaceDir Response returns z.object() directly.\n */\nexport async function checkWorkspaceDir(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/checkWorkspaceDir', payload, true);\n  console.log('Mock call to checkWorkspaceDir with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 在指定路径创建一个新的思源笔记工作空间。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def createWorkspaceDir Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def createWorkspaceDir Response returns z.object() directly.\n */\nexport async function createWorkspaceDir(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/createWorkspaceDir', payload, true);\n  console.log('Mock call to createWorkspaceDir with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取思源笔记服务器当前的 Unix 时间戳 (毫秒)。\n * @param {any} payload - ERROR: API def currentTime Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def currentTime Response returns z.object() directly.\n */\nexport async function currentTime(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/currentTime', payload, false);\n  console.log('Mock call to currentTime with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 关闭并退出思源笔记程序。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def exit Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def exit Response returns z.object() directly.\n */\nexport async function exit(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/exit', payload, true);\n  console.log('Mock call to exit with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 导出一份包含当前用户所有配置的 JSON 文件。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def exportConf Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def exportConf Response returns z.object() directly.\n */\nexport async function exportConf(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/exportConf', payload, true);\n  console.log('Mock call to exportConf with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 导出包含系统运行日志的压缩文件。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def exportLog Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def exportLog Response returns z.object() directly.\n */\nexport async function exportLog(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/exportLog', payload, true);\n  console.log('Mock call to exportLog with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取用于登录验证的图片验证码。\n * @param {any} payload - ERROR: API def GetCaptcha Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def GetCaptcha Response returns z.object() directly.\n */\nexport async function GetCaptcha(payload) {\n  // Example: return fetchWrapper('GET', '/api/system/getCaptcha', payload, false);\n  console.log('Mock call to GetCaptcha with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取当前版本的更新日志内容 (Markdown 格式转换为 HTML)。\n * (Requires authentication)\n * @param {any} payload - ERROR: API def getChangelog Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getChangelog Response returns z.object() directly.\n */\nexport async function getChangelog(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/getChangelog', payload, true);\n  console.log('Mock call to getChangelog with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取思源笔记的全部配置信息。配置项繁多，具体结构请参考 `siyuan/kernel/conf/conf.go` 中的 `Conf` 结构体。\n * (Requires authentication)\n * @param {any} payload - ERROR: API def getConf Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getConf Response returns z.object() directly.\n */\nexport async function getConf(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/getConf', payload, true);\n  console.log('Mock call to getConf with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取内置及自定义 Emoji 的配置信息，用于 Emoji 选择器等功能。\n * (Requires authentication)\n * @param {any} payload - ERROR: API def getEmojiConf Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getEmojiConf Response returns z.object() directly.\n */\nexport async function getEmojiConf(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/getEmojiConf', payload, true);\n  console.log('Mock call to getEmojiConf with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取用于移动端同步的工作空间列表。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def getMobileWorkspaces Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getMobileWorkspaces Response returns z.object() directly.\n */\nexport async function getMobileWorkspaces(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/getMobileWorkspaces', payload, true);\n  console.log('Mock call to getMobileWorkspaces with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取当前的网络代理等配置信息。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def getNetwork Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getNetwork Response returns z.object() directly.\n */\nexport async function getNetwork(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/getNetwork', payload, true);\n  console.log('Mock call to getNetwork with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取当前操作系统上安装的可用字体列表。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def getSysFonts Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getSysFonts Response returns z.object() directly.\n */\nexport async function getSysFonts(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/getSysFonts', payload, true);\n  console.log('Mock call to getSysFonts with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取当前打开的工作空间目录路径和思源版本号。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def getWorkspaceInfo Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getWorkspaceInfo Response returns z.object() directly.\n */\nexport async function getWorkspaceInfo(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/getWorkspaceInfo', payload, true);\n  console.log('Mock call to getWorkspaceInfo with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取所有已配置或曾经打开过的工作空间列表。\n * (Requires authentication)\n * @param {any} payload - ERROR: API def getWorkspaces Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getWorkspaces Response returns z.object() directly.\n */\nexport async function getWorkspaces(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/getWorkspaces', payload, true);\n  console.log('Mock call to getWorkspaces with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 设置不再提示用户添加 Microsoft Defender 排除项。此操作仅在 Windows 系统上有效。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def ignoreAddMicrosoftDefenderExclusion Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def ignoreAddMicrosoftDefenderExclusion Response returns z.object() directly.\n */\nexport async function ignoreAddMicrosoftDefenderExclusion(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/ignoreAddMicrosoftDefenderExclusion', payload, true);\n  console.log('Mock call to ignoreAddMicrosoftDefenderExclusion with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 通过上传 `conf.json` 文件来导入用户配置。导入成功后通常需要重启或刷新UI生效。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def importConf Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def importConf Response returns z.object() directly.\n */\nexport async function importConf(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/importConf', payload, true);\n  console.log('Mock call to importConf with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 使用访问授权码或用户名密码进行登录验证。\n * @param {any} payload - ERROR: API def LoginAuth Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def LoginAuth Response returns z.object() directly.\n */\nexport async function LoginAuth(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/loginAuth', payload, false);\n  console.log('Mock call to LoginAuth with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 清除当前的登录授权状态。\n * @param {any} payload - ERROR: API def LogoutAuth Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def LogoutAuth Response returns z.object() directly.\n */\nexport async function LogoutAuth(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/logoutAuth', payload, false);\n  console.log('Mock call to LogoutAuth with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 命令客户端重新加载思源笔记的用户界面。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def reloadUI Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def reloadUI Response returns z.object() directly.\n */\nexport async function reloadUI(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/reloadUI', payload, true);\n  console.log('Mock call to reloadUI with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 从工作空间列表中移除指定的目录（逻辑删除，不删除物理文件）。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def removeWorkspaceDir Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def removeWorkspaceDir Response returns z.object() directly.\n */\nexport async function removeWorkspaceDir(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/removeWorkspaceDir', payload, true);\n  console.log('Mock call to removeWorkspaceDir with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 从工作空间列表中移除并物理删除指定目录及其所有内容。这是一个危险操作！\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def removeWorkspaceDirPhysically Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def removeWorkspaceDirPhysically Response returns z.object() directly.\n */\nexport async function removeWorkspaceDirPhysically(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/removeWorkspaceDirPhysically', payload, true);\n  console.log('Mock call to removeWorkspaceDirPhysically with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 设置或清空 API 访问令牌 (token)。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setAPIToken Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setAPIToken Response returns z.object() directly.\n */\nexport async function setAPIToken(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setAPIToken', payload, true);\n  console.log('Mock call to setAPIToken with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 设置或清空访问思源笔记的授权码。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setAccessAuthCode Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setAccessAuthCode Response returns z.object() directly.\n */\nexport async function setAccessAuthCode(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setAccessAuthCode', payload, true);\n  console.log('Mock call to setAccessAuthCode with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 设置思源笔记的外观模式 (亮色/暗色)。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setAppearanceMode Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setAppearanceMode Response returns z.object() directly.\n */\nexport async function setAppearanceMode(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setAppearanceMode', payload, true);\n  console.log('Mock call to setAppearanceMode with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 设置思源笔记是否开机自启动 (仅对桌面客户端有效)。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setAutoLaunch Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setAutoLaunch Response returns z.object() directly.\n */\nexport async function setAutoLaunch(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setAutoLaunch', payload, true);\n  console.log('Mock call to setAutoLaunch with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 设置是否在检测到新版本后自动下载并安装更新包。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setDownloadInstallPkg Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setDownloadInstallPkg Response returns z.object() directly.\n */\nexport async function setDownloadInstallPkg(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setDownloadInstallPkg', payload, true);\n  console.log('Mock call to setDownloadInstallPkg with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 设置思源笔记是否在系统锁屏时自动锁定 (仅对桌面客户端有效)。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setFollowSystemLockScreen Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setFollowSystemLockScreen Response returns z.object() directly.\n */\nexport async function setFollowSystemLockScreen(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setFollowSystemLockScreen', payload, true);\n  console.log('Mock call to setFollowSystemLockScreen with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 启用或禁用 Google Analytics 数据追踪。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setGoogleAnalytics Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setGoogleAnalytics Response returns z.object() directly.\n */\nexport async function setGoogleAnalytics(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setGoogleAnalytics', payload, true);\n  console.log('Mock call to setGoogleAnalytics with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 设置网络连接时使用的代理服务器。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setNetworkProxy Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setNetworkProxy Response returns z.object() directly.\n */\nexport async function setNetworkProxy(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setNetworkProxy', payload, true);\n  console.log('Mock call to setNetworkProxy with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 配置思源笔记的网络服务，如服务端口、是否允许其他设备访问等。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setNetworkServe Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setNetworkServe Response returns z.object() directly.\n */\nexport async function setNetworkServe(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setNetworkServe', payload, true);\n  console.log('Mock call to setNetworkServe with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 设置用户界面的布局模式，例如左右布局、顶部分栏等。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setUILayout Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setUILayout Response returns z.object() directly.\n */\nexport async function setUILayout(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setUILayout', payload, true);\n  console.log('Mock call to setUILayout with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 切换到指定路径的工作空间。成功后通常需要重启或刷新 UI。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setWorkspaceDir Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setWorkspaceDir Response returns z.object() directly.\n */\nexport async function setWorkspaceDir(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/setWorkspaceDir', payload, true);\n  console.log('Mock call to setWorkspaceDir with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * （内部接口）用于桌面端添加 UI 进程的相关信息，如 PID。通常不由普通用户或第三方应用直接调用。\n * @param {any} payload - ERROR: API def addUIProcess Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def addUIProcess Response returns z.object() directly.\n */\nexport async function addUIProcess(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/uiproc', payload, false);\n  console.log('Mock call to addUIProcess with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取当前思源笔记内核的版本号。此接口也接受 POST 请求。\n * @param {any} payload - ERROR: API def version Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def version Response returns z.object() directly.\n */\nexport async function version(payload) {\n  // Example: return fetchWrapper('GET', '/api/system/version', payload, false);\n  console.log('Mock call to version with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取当前思源笔记内核的版本号。此接口也接受 GET 请求。\n * @param {any} payload - ERROR: API def version Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def version Response returns z.object() directly.\n */\nexport async function version(payload) {\n  // Example: return fetchWrapper('POST', '/api/system/version', payload, false);\n  console.log('Mock call to version with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n