// Generated client for API group notebook\n// TODO: Implement or import a common HTTP request wrapper function (e.g., fetchWrapper)\n/*\nasync function fetchWrapper(method, endpoint, params, needAuth) {\n  const SiyuanKernelPrefix = typeof window === 'object' ? '' : 'http://127.0.0.1:6806';\n  const url = SiyuanKernelPrefix + endpoint;\n  const options = { method, headers: {} };\n  if (method === 'POST' && params && Object.keys(params).length > 0) { // Only add body if params exist and are not empty\n    options.headers['Content-Type'] = 'application/json';\n    options.body = JSON.stringify(params);\n  }\n  if (needAuth) {\n    // Example: Retrieve and add auth token\n    // const token = localStorage.getItem('siyuan-auth-token'); \n    // if (token) options.headers['Authorization'] = `Token ${token}`;\n    options.headers['Authorization'] = 'Bearer YOUR_TOKEN_HERE'; // Placeholder\n  }\n  const response = await fetch(url, options);\n  if (!response.ok) {\n    let errorData = 'Failed to parse error response';\n    try { errorData = await response.json(); } catch (e) { try {errorData = await response.text(); } catch (e2) { /* ignore secondary error */ }}\n    console.error('API Error:', response.status, errorData); \n    throw new Error(`API Error ${response.status}: ${JSON.stringify(errorData)}`);\n  }\n  const contentType = response.headers.get('content-type');\n  if (contentType && contentType.includes('application/json')) {\n    return response.json();\n  } \n  return response.text(); // Or handle other content types\n}\n*/\n\n/**\n * 批量更改笔记本的显示顺序。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def changeSortNotebook Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def changeSortNotebook Response returns z.object() directly.\n */\nexport async function changeSortNotebook(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/changeSortNotebook', payload, true);\n  console.log('Mock call to changeSortNotebook with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 关闭一个指定的笔记本。关闭后，笔记本内容将不再可访问，直到再次打开。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def closeNotebook Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def closeNotebook Response returns z.object() directly.\n */\nexport async function closeNotebook(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/closeNotebook', payload, true);\n  console.log('Mock call to closeNotebook with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 创建一个新的笔记本。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def createNotebook Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def createNotebook Response returns z.object() directly.\n */\nexport async function createNotebook(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/createNotebook', payload, true);\n  console.log('Mock call to createNotebook with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取指定笔记本的配置信息。\n * (Requires authentication)\n * @param {any} payload - ERROR: API def getNotebookConf Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getNotebookConf Response returns z.object() directly.\n */\nexport async function getNotebookConf(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/getNotebookConf', payload, true);\n  console.log('Mock call to getNotebookConf with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取指定笔记本的详细信息，包括其配置和统计数据。\n * (Requires authentication, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def getNotebookInfo Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getNotebookInfo Response returns z.object() directly.\n */\nexport async function getNotebookInfo(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/getNotebookInfo', payload, true);\n  console.log('Mock call to getNotebookInfo with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取当前工作空间中所有笔记本的列表，包含已打开和未打开的笔记本。\n * (Requires authentication)\n * @param {any} payload - ERROR: API def lsNotebooks Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def lsNotebooks Response returns z.object() directly.\n */\nexport async function lsNotebooks(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/lsNotebooks', payload, true);\n  console.log('Mock call to lsNotebooks with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 打开一个指定的笔记本。如果笔记本已经是打开状态，此操作可能仅刷新其状态。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def openNotebook Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def openNotebook Response returns z.object() directly.\n */\nexport async function openNotebook(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/openNotebook', payload, true);\n  console.log('Mock call to openNotebook with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 删除一个指定的笔记本。此操作会从工作空间移除笔记本及其所有内容。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def removeNotebook Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def removeNotebook Response returns z.object() directly.\n */\nexport async function removeNotebook(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/removeNotebook', payload, true);\n  console.log('Mock call to removeNotebook with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 重命名一个指定的笔记本。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def renameNotebook Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def renameNotebook Response returns z.object() directly.\n */\nexport async function renameNotebook(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/renameNotebook', payload, true);\n  console.log('Mock call to renameNotebook with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 更新指定笔记本的配置信息。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setNotebookConf Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setNotebookConf Response returns z.object() directly.\n */\nexport async function setNotebookConf(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/setNotebookConf', payload, true);\n  console.log('Mock call to setNotebookConf with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 设置指定笔记本的显示图标。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def setNotebookIcon Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def setNotebookIcon Response returns z.object() directly.\n */\nexport async function setNotebookIcon(payload) {\n  // Example: return fetchWrapper('POST', '/api/notebook/setNotebookIcon', payload, true);\n  console.log('Mock call to setNotebookIcon with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n