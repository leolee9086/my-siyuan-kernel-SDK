// Generated client for API group riff\n// TODO: Implement or import a common HTTP request wrapper function (e.g., fetchWrapper)\n/*\nasync function fetchWrapper(method, endpoint, params, needAuth) {\n  const SiyuanKernelPrefix = typeof window === 'object' ? '' : 'http://127.0.0.1:6806';\n  const url = SiyuanKernelPrefix + endpoint;\n  const options = { method, headers: {} };\n  if (method === 'POST' && params && Object.keys(params).length > 0) { // Only add body if params exist and are not empty\n    options.headers['Content-Type'] = 'application/json';\n    options.body = JSON.stringify(params);\n  }\n  if (needAuth) {\n    // Example: Retrieve and add auth token\n    // const token = localStorage.getItem('siyuan-auth-token'); \n    // if (token) options.headers['Authorization'] = `Token ${token}`;\n    options.headers['Authorization'] = 'Bearer YOUR_TOKEN_HERE'; // Placeholder\n  }\n  const response = await fetch(url, options);\n  if (!response.ok) {\n    let errorData = 'Failed to parse error response';\n    try { errorData = await response.json(); } catch (e) { try {errorData = await response.text(); } catch (e2) { /* ignore secondary error */ }}\n    console.error('API Error:', response.status, errorData); \n    throw new Error(`API Error ${response.status}: ${JSON.stringify(errorData)}`);\n  }\n  const contentType = response.headers.get('content-type');\n  if (contentType && contentType.includes('application/json')) {\n    return response.json();\n  } \n  return response.text(); // Or handle other content types\n}\n*/\n\n/**\n * 将指定的块添加为闪卡到指定的闪卡包中。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def addRiffCards Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def addRiffCards Response returns z.object() directly.\n */\nexport async function addRiffCards(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/addRiffCards', payload, true);\n  console.log('Mock call to addRiffCards with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 批量设置闪卡的到期时间。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def batchSetRiffCardsDueTime Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def batchSetRiffCardsDueTime Response returns z.object() directly.\n */\nexport async function batchSetRiffCardsDueTime(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/batchSetRiffCardsDueTime', payload, true);\n  console.log('Mock call to batchSetRiffCardsDueTime with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 创建一个新的闪卡包。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def createRiffDeck Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def createRiffDeck Response returns z.object() directly.\n */\nexport async function createRiffDeck(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/createRiffDeck', payload, true);\n  console.log('Mock call to createRiffDeck with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取指定笔记本下的所有闪卡块 ID，支持分页。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def getNotebookRiffCards Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getNotebookRiffCards Response returns z.object() directly.\n */\nexport async function getNotebookRiffCards(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/getNotebookRiffCards', payload, true);\n  console.log('Mock call to getNotebookRiffCards with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取指定笔记本下所有到期应复习的闪卡。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def getNotebookRiffDueCards Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getNotebookRiffDueCards Response returns z.object() directly.\n */\nexport async function getNotebookRiffDueCards(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/getNotebookRiffDueCards', payload, true);\n  console.log('Mock call to getNotebookRiffDueCards with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取指定闪卡包中的所有闪卡块 ID，支持分页。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def getRiffCards Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getRiffCards Response returns z.object() directly.\n */\nexport async function getRiffCards(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/getRiffCards', payload, true);\n  console.log('Mock call to getRiffCards with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 根据一组块 ID 批量获取它们对应的闪卡信息。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def getRiffCardsByBlockIDs Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getRiffCardsByBlockIDs Response returns z.object() directly.\n */\nexport async function getRiffCardsByBlockIDs(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/getRiffCardsByBlockIDs', payload, true);\n  console.log('Mock call to getRiffCardsByBlockIDs with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取当前工作空间中所有的闪卡包列表。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def getRiffDecks Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getRiffDecks Response returns z.object() directly.\n */\nexport async function getRiffDecks(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/getRiffDecks', payload, true);\n  console.log('Mock call to getRiffDecks with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取指定闪卡包中所有到期应复习的闪卡。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def getRiffDueCards Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getRiffDueCards Response returns z.object() directly.\n */\nexport async function getRiffDueCards(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/getRiffDueCards', payload, true);\n  console.log('Mock call to getRiffDueCards with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取指定文档树（根块）下的所有闪卡块 ID，支持分页。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def getTreeRiffCards Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getTreeRiffCards Response returns z.object() directly.\n */\nexport async function getTreeRiffCards(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/getTreeRiffCards', payload, true);\n  console.log('Mock call to getTreeRiffCards with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 获取指定文档树（根块）下所有到期应复习的闪卡。\n * (Requires authentication, Requires admin role)\n * @param {any} payload - ERROR: API def getTreeRiffDueCards Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def getTreeRiffDueCards Response returns z.object() directly.\n */\nexport async function getTreeRiffDueCards(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/getTreeRiffDueCards', payload, true);\n  console.log('Mock call to getTreeRiffDueCards with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 从指定的闪卡包中移除指定的闪卡。如果 deckID 为空字符串，则从所有闪卡包中移除。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def removeRiffCards Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def removeRiffCards Response returns z.object() directly.\n */\nexport async function removeRiffCards(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/removeRiffCards', payload, true);\n  console.log('Mock call to removeRiffCards with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 移除指定的闪卡包及其包含的所有闪卡。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def removeRiffDeck Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def removeRiffDeck Response returns z.object() directly.\n */\nexport async function removeRiffDeck(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/removeRiffDeck', payload, true);\n  console.log('Mock call to removeRiffDeck with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 重命名指定的闪卡包。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def renameRiffDeck Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def renameRiffDeck Response returns z.object() directly.\n */\nexport async function renameRiffDeck(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/renameRiffDeck', payload, true);\n  console.log('Mock call to renameRiffDeck with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 重置指定范围内的闪卡的学习进度。可以按笔记本、文档树或闪卡包进行重置，也可以指定具体的块 ID 列表。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def resetRiffCards Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def resetRiffCards Response returns z.object() directly.\n */\nexport async function resetRiffCards(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/resetRiffCards', payload, true);\n  console.log('Mock call to resetRiffCards with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 对指定的闪卡进行一次复习，并根据评分更新其下次到期时间等学习状态。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def reviewRiffCard Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def reviewRiffCard Response returns z.object() directly.\n */\nexport async function reviewRiffCard(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/reviewRiffCard', payload, true);\n  console.log('Mock call to reviewRiffCard with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n/**\n * 跳过当前闪卡的复习，通常是将其推迟到当前学习队列的末尾或稍后。\n * (Requires authentication, Requires admin role, Unavailable in read-only mode)\n * @param {any} payload - ERROR: API def skipReviewRiffCard Request returns z.object() directly.\n * @returns {Promise<any>} ERROR: API def skipReviewRiffCard Response returns z.object() directly.\n */\nexport async function skipReviewRiffCard(payload) {\n  // Example: return fetchWrapper('POST', '/api/riff/skipReviewRiffCard', payload, true);\n  console.log('Mock call to skipReviewRiffCard with:', payload);\n  return Promise.resolve({}); // TODO: Ensure mock response matches Promise<any>\n}\n\n